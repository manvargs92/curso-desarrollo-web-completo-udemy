:root {/* : pseudo selectores, no hacen referencia como tal a una etiqueta html */
    --blanco: #ffffff; /* los colores se definen en hexadecimal, rgb, hsl o nombre (blue, red, etc.) pero este último no es recomendable */
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
}

/*** Hack para poder utilizar la medida rem de forma mucho mas facil ***/
html {
    font-size: 62.5%;
/* snippet para deshacernos del boxmodel */
    box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}
/****************************************/

body {/* las propiedades que se coloquen dentro de este selector se aplican a todo el documento */
    font-size: 16px;/* 1 rem = 10px (con el hack) */
    font-family: "Krub", sans-serif;/* asignar fuente al texto */
}
/***********************************************************************/

h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;/* alineación */
}

/* .titulo {
    color: var(--primario);/* agregar color a texto
    font-weight: 400;/* 400 = normal; 700 = bold
} */

.titulo span {
    /* font-size: 20px;/* pixeles de la pantalla, ya no es recomendable usar esta medida en px */
    font-size: 2rem;/* rem tamaño relativo al documento*/
}

.contenedor {
    /* width: 120rem; */
    max-width: 120rem;/* toma la cantidad rem, px como máximo y solo si hay ese espacio disponible, si no, toma el 100% del ancho */
    /* centrar el contenido con márgenes */
    /*margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;

    margin: 0 auto 0 auto;/* top right bottom left, definir el márgen en los cuatro lados pero con una sola línes de css */
    margin: 0 auto;/* si solo hay dos valores: arriba/abajo izquierda/derecha */
    /************************************/
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase; /* transforma el texto en todas las letras mayúsculas */
    font-weight: 700;
    border-radius: .5rem; /* rendondea los bordes */
    width: 90%;
    text-align: center;
}

@media (min-width: 768px) {
    .boton {
        width: auto; /* auto para que se reinicie el tamaño por defecto */
    }
}

.nav-background {
    background-color: var(--secundario);
}

.navegacion-principal {
    /* margin-top: 100px;/* aplica un margen hacia afuera del elemento, haciendo que se separe de otro elemento */
    /* padding-top: 100px;/* aplica un margen hacia adentro del elemento, haciendo que quede mas grande el elemento */
    display: flex;/* habilita flexbox en el elmento; block: los elementos irán uno de bajo del otro; inline: los elementos irán uno al lado del otro */
    flex-direction: column;/* volver flexbox verical */
    /*align-items: center;/* alinear los elementos de flexbox verical */
}

@media (min-width: 768px) {
    .navegacion-principal {
        flex-direction: row;
        justify-content: space-between;/* permite mover el contenido horizontalmente */
    }
}

.navegacion-principal a {
    color: var(--blanco);
    text-decoration: none;/* modifica la decoración del texto, en este caso, elimina el subrayado de los enlaces */
    font-size: 2rem;
    font-weight: 700; /* 700 = bold*/
    padding: 1rem;/* aplica un padding en las 4 direcciones */
    display: block;
    text-align: center;
}

.navegacion-principal a:hover {/* :hover pseudoclase para insertar efectos */
    background-color: var(--primario);
    color: var(--oscuro);
}

.hero {
    background-image: url(../imgs/hero.jpg);/* añadir una imágen como fondo*/
    background-repeat: no-repeat;/* evita que se repita laimagen en el espacio que quede vacío*/
    background-size: cover;/* ajusta la imagen para que abarque todo el espacio y no quede espacio vacío*/
    height: 450px;
    position: relative; /* el elemento padre siempre debe tener posición relativa para que el hijo pueda tener posición absoluta */
}

.contenido-hero {
    position: absolute;/* para posicionar el contenido en un lugar preciso */
    background-color: rgba(0,0,0,.7);/* sintaxis anterior */
    background-color: rgb(0 0 0 / 70%); /* sintaxis nueva */
    width: 2rem;
    height: 2rem;
    /* coordenadas para colocar el elemento con position: absolute */
    width: 100%;
    height: 100%;
    /* top: 0; */
    /* bottom: 0; */
    /* right: 0; */
    /* left: 0; */
    /***************************************************************/

    display: flex;
    flex-direction: column;
    align-items: center; /* alinear verticalmente */
    justify-content: center; /* alinear horizontalmente */
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.ubicacion {
    display: flex;
    align-items: flex-end;
}

/* Tipos de selectores */
/*elemento {}/* selector de elementos; por ejemplo h1, p, span, etc. */
/*.clase {}/* selector de clases, .nombre-de-la-clase */
/*#id {}/* selector de ids, #nombre-del-id */
/*[atributo="imagen.jpg"] {}/* selector de atributos */
/*.clase1 .clase2 {}/* combinación de descendentes: selecciona los elementos hijos cuyo padre sea una clase o id en específico */
/*.clase > elemento{}/* todos los hijos: aplica la regla a todos los elementos hijos de la clase o id en específico */
/*
- las clases son reutilizables, recomendado usarlas para aplicar estilos
- los id se recomiendan para código JavaScript y usarlos solo una vez por id
- los estilos se aplican prioritariamente mientras más específico sea el selector y sin importar en cuál línea se haya declarado
*/